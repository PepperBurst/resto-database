
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Arvin Aquino
 */
public class restoProgram extends javax.swing.JFrame {

    PreparedStatement SQLStatement = null;
    ResultSet queryResultSet = null;
    Connection con = null;
    Admin currAdmin;
    Customer currCustomer;
    /**
     * Creates new form restoProgram
     */
    public restoProgram() {
        this.currAdmin = new Admin();
        this.currCustomer = new Customer();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        pnlStartup = new javax.swing.JPanel();
        btnStartupLaunch = new javax.swing.JButton();
        btnStartupInfo = new javax.swing.JButton();
        btnStartupExit = new javax.swing.JButton();
        pnlLogin = new javax.swing.JPanel();
        btnLoginBack = new javax.swing.JButton();
        btnLoginLogin = new javax.swing.JButton();
        txtLoginUsername = new javax.swing.JTextField();
        lblLoginUsername = new javax.swing.JLabel();
        lblLoginPassword = new javax.swing.JLabel();
        txtLoginPassword = new javax.swing.JPasswordField();
        pnlInfo = new javax.swing.JPanel();
        btnStartupBack = new javax.swing.JButton();
        pnlAdminMain = new javax.swing.JPanel();
        pnlAdminMainTab = new javax.swing.JTabbedPane();
        pnlAdminMainHome = new javax.swing.JPanel();
        pnlAdminMainInfo = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtAdminInfoMname = new javax.swing.JTextField();
        txtAdminInfoFname = new javax.swing.JTextField();
        txtAdminInfoLname = new javax.swing.JTextField();
        txtAdminInfoUsername = new javax.swing.JTextField();
        txtAdminInfoPassword = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAdminAccountsEdit = new javax.swing.JButton();
        pnlCusMain = new javax.swing.JPanel();
        pnlCusMainTab = new javax.swing.JTabbedPane();
        pnlCusMainHome = new javax.swing.JPanel();
        pnlCusInfo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCusInfoID = new javax.swing.JTextField();
        txtCusInfoUsername = new javax.swing.JTextField();
        txtCusInfoPassword = new javax.swing.JTextField();
        txtCusInfoFname = new javax.swing.JTextField();
        txtCusInfoMname = new javax.swing.JTextField();
        txtCusInfoLname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCusInfoSex = new javax.swing.JTextField();
        btnCusInfoUpdate = new javax.swing.JToggleButton();
        btnCusInfoSave = new javax.swing.JToggleButton();
        btnCusInfoCancel = new javax.swing.JButton();
        btnCusInfoClear = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(480, 360));
        setResizable(false);

        mainPanel.setLayout(new java.awt.CardLayout());

        btnStartupLaunch.setText("Launch");
        btnStartupLaunch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartupLaunchActionPerformed(evt);
            }
        });

        btnStartupInfo.setText("Info");
        btnStartupInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartupInfoActionPerformed(evt);
            }
        });

        btnStartupExit.setText("Exit");
        btnStartupExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartupExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlStartupLayout = new javax.swing.GroupLayout(pnlStartup);
        pnlStartup.setLayout(pnlStartupLayout);
        pnlStartupLayout.setHorizontalGroup(
            pnlStartupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStartupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnStartupLaunch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStartupInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStartupExit)
                .addContainerGap(307, Short.MAX_VALUE))
        );
        pnlStartupLayout.setVerticalGroup(
            pnlStartupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStartupLayout.createSequentialGroup()
                .addContainerGap(348, Short.MAX_VALUE)
                .addGroup(pnlStartupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStartupLaunch)
                    .addComponent(btnStartupInfo)
                    .addComponent(btnStartupExit))
                .addContainerGap())
        );

        mainPanel.add(pnlStartup, "card2");

        btnLoginBack.setText("Back");
        btnLoginBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginBackActionPerformed(evt);
            }
        });

        btnLoginLogin.setText("Login");
        btnLoginLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginLoginActionPerformed(evt);
            }
        });

        lblLoginUsername.setText("Username:");

        lblLoginPassword.setText("Password:");

        javax.swing.GroupLayout pnlLoginLayout = new javax.swing.GroupLayout(pnlLogin);
        pnlLogin.setLayout(pnlLoginLayout);
        pnlLoginLayout.setHorizontalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLoginLayout.createSequentialGroup()
                        .addComponent(btnLoginLogin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 368, Short.MAX_VALUE)
                        .addComponent(btnLoginBack))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLoginLayout.createSequentialGroup()
                        .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLoginLayout.createSequentialGroup()
                                .addComponent(lblLoginUsername)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLoginUsername))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLoginLayout.createSequentialGroup()
                                .addComponent(lblLoginPassword)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLoginPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlLoginLayout.setVerticalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLoginUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLoginUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLoginPassword)
                    .addComponent(txtLoginPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 291, Short.MAX_VALUE)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoginBack)
                    .addComponent(btnLoginLogin))
                .addContainerGap())
        );

        mainPanel.add(pnlLogin, "card4");

        btnStartupBack.setText("Back");
        btnStartupBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartupBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInfoLayout.createSequentialGroup()
                .addContainerGap(435, Short.MAX_VALUE)
                .addComponent(btnStartupBack)
                .addContainerGap())
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInfoLayout.createSequentialGroup()
                .addContainerGap(348, Short.MAX_VALUE)
                .addComponent(btnStartupBack)
                .addContainerGap())
        );

        mainPanel.add(pnlInfo, "card4");

        pnlAdminMain.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pnlAdminMainHomeLayout = new javax.swing.GroupLayout(pnlAdminMainHome);
        pnlAdminMainHome.setLayout(pnlAdminMainHomeLayout);
        pnlAdminMainHomeLayout.setHorizontalGroup(
            pnlAdminMainHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
        );
        pnlAdminMainHomeLayout.setVerticalGroup(
            pnlAdminMainHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        pnlAdminMainTab.addTab("Home", pnlAdminMainHome);

        jLabel8.setText("First Name:");

        jLabel9.setText("Middle Name:");

        jLabel10.setText("Last Name:");

        jLabel11.setText("Username:");

        jLabel12.setText("Password:");

        javax.swing.GroupLayout pnlAdminMainInfoLayout = new javax.swing.GroupLayout(pnlAdminMainInfo);
        pnlAdminMainInfo.setLayout(pnlAdminMainInfoLayout);
        pnlAdminMainInfoLayout.setHorizontalGroup(
            pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminMainInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAdminInfoFname, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtAdminInfoMname)
                        .addComponent(txtAdminInfoLname)
                        .addComponent(txtAdminInfoUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(txtAdminInfoPassword)))
                .addContainerGap())
        );
        pnlAdminMainInfoLayout.setVerticalGroup(
            pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminMainInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtAdminInfoFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtAdminInfoMname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtAdminInfoLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtAdminInfoUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtAdminInfoPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(222, Short.MAX_VALUE))
        );

        pnlAdminMainTab.addTab("Info", pnlAdminMainInfo);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        btnAdminAccountsEdit.setText("Edit");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdminAccountsEdit)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(btnAdminAccountsEdit)
                .addContainerGap())
        );

        pnlAdminMainTab.addTab("Accounts", jPanel1);

        pnlAdminMain.add(pnlAdminMainTab, java.awt.BorderLayout.CENTER);

        mainPanel.add(pnlAdminMain, "card6");

        pnlCusMain.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pnlCusMainHomeLayout = new javax.swing.GroupLayout(pnlCusMainHome);
        pnlCusMainHome.setLayout(pnlCusMainHomeLayout);
        pnlCusMainHomeLayout.setHorizontalGroup(
            pnlCusMainHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
        );
        pnlCusMainHomeLayout.setVerticalGroup(
            pnlCusMainHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 354, Short.MAX_VALUE)
        );

        pnlCusMainTab.addTab("Home", pnlCusMainHome);

        jLabel1.setText("ID:");

        jLabel2.setText("Username:");

        jLabel3.setText("Password:");

        jLabel4.setText("First Name:");

        jLabel5.setText("Middle Name:");

        jLabel6.setText("Last Name:");

        txtCusInfoID.setEnabled(false);

        txtCusInfoUsername.setEnabled(false);

        txtCusInfoPassword.setEnabled(false);

        txtCusInfoFname.setEnabled(false);

        txtCusInfoMname.setEnabled(false);

        txtCusInfoLname.setEnabled(false);

        jLabel7.setText("Sex:");

        txtCusInfoSex.setEnabled(false);

        btnCusInfoUpdate.setText("Update");
        btnCusInfoUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCusInfoUpdateActionPerformed(evt);
            }
        });

        btnCusInfoSave.setText("Save");
        btnCusInfoSave.setEnabled(false);
        btnCusInfoSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCusInfoSaveActionPerformed(evt);
            }
        });

        btnCusInfoCancel.setText("Cancel");
        btnCusInfoCancel.setEnabled(false);
        btnCusInfoCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCusInfoCancelActionPerformed(evt);
            }
        });

        btnCusInfoClear.setText("Clear");
        btnCusInfoClear.setEnabled(false);
        btnCusInfoClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCusInfoClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCusInfoLayout = new javax.swing.GroupLayout(pnlCusInfo);
        pnlCusInfo.setLayout(pnlCusInfoLayout);
        pnlCusInfoLayout.setHorizontalGroup(
            pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCusInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCusInfoID, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCusInfoUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCusInfoPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 191, Short.MAX_VALUE)
                        .addComponent(txtCusInfoFname, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCusInfoLayout.createSequentialGroup()
                        .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCusInfoSex, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                            .addComponent(txtCusInfoLname)
                            .addComponent(txtCusInfoMname)))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(btnCusInfoUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCusInfoSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCusInfoCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCusInfoClear)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlCusInfoLayout.setVerticalGroup(
            pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCusInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCusInfoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCusInfoUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCusInfoPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCusInfoFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCusInfoMname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCusInfoLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCusInfoSex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCusInfoUpdate)
                    .addComponent(btnCusInfoSave)
                    .addComponent(btnCusInfoCancel)
                    .addComponent(btnCusInfoClear))
                .addContainerGap())
        );

        pnlCusMainTab.addTab("Info", pnlCusInfo);

        pnlCusMain.add(pnlCusMainTab, java.awt.BorderLayout.CENTER);

        mainPanel.add(pnlCusMain, "card5");

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartupBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartupBackActionPerformed
        // TODO add your handling code here:
        switchPanel("pnlStartup");
    }//GEN-LAST:event_btnStartupBackActionPerformed

    private void btnStartupInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartupInfoActionPerformed
        // TODO add your handling code here:
        switchPanel("pnlInfo");
    }//GEN-LAST:event_btnStartupInfoActionPerformed

    private void btnStartupExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartupExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnStartupExitActionPerformed

    private void btnStartupLaunchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartupLaunchActionPerformed
        // TODO add your handling code here:
        say("Launching app");
        switchPanel("pnlLogin");
    }//GEN-LAST:event_btnStartupLaunchActionPerformed

    private void btnLoginLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginLoginActionPerformed
        // TODO add your handling code here:
        connect();
        String username = txtLoginUsername.getText();
        String password = txtLoginPassword.getText();
        if(checkFields("pnlLogin")){
            try{
                String sql = "Select adminUsername from admin where"
                + "adminUsername='" + username + "' and "
                + "adminPassword='" + password + "'";
                SQLStatement = con.prepareStatement(sql);
                queryResultSet = SQLStatement.executeQuery(sql);
                if(queryResultSet.next()){
                    String fName = queryResultSet.getString("adminFname");
                    String mName = queryResultSet.getString("adminMname");
                    String lName = queryResultSet.getString("adminLname");
                    int id = Integer.parseInt(queryResultSet.getString(
                            "adminID"));
                    loginHistory("admin");
                    say("Welcom Admin " + fName + "!");
                    currAdmin =  new Admin(id, fName, mName, lName, username,
                            password);
                }else{
                    String sqlA = "Select cusUsername from customer where"
                    + "cusUsername='" + username + "' and '"
                    + "cusPassword='" + password + "'";
                    SQLStatement = con.prepareStatement(sqlA);
                    queryResultSet = SQLStatement.executeQuery(sqlA);
                    if(queryResultSet.next()){
                        String fName = queryResultSet.getString("cusFname");
                        String mName = queryResultSet.getString("cusMname");
                        String lName = queryResultSet.getString("cusLname");
                        String sex = queryResultSet.getString("cusSex");
                        int id = Integer.parseInt(queryResultSet.getString(
                                "cusID"));
                        currCustomer =  new Customer(id, fName, mName, lName,
                                username, password, sex);
                        say("Welcom Customer " + fName + "!");
                        switchPanel("pnlCusMain");
                    }else{
                        say("Invalid username and/or password!\nPlease try"
                                + "again");
                        clearFields("pnlLogin");
                    }
                }
            }catch(SQLException | HeadlessException e){
                say("Error:\n" + e);
            }
        }else{
            say("Some fields are empty!");
            //            clearFields("studentLogin");
        }
    }//GEN-LAST:event_btnLoginLoginActionPerformed

    private void btnLoginBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginBackActionPerformed
        // TODO add your handling code here:
        clearFields("pnlLogin");
    }//GEN-LAST:event_btnLoginBackActionPerformed

    private void btnCusInfoUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCusInfoUpdateActionPerformed
        // TODO add your handling code here:
        enableFields("pnlCusInfo", true);
        btnCusInfoUpdate.setEnabled(false);
        btnCusInfoSave.setEnabled(true);
        btnCusInfoCancel.setEnabled(true);
        btnCusInfoClear.setEnabled(true);
    }//GEN-LAST:event_btnCusInfoUpdateActionPerformed

    private void btnCusInfoSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCusInfoSaveActionPerformed
        // TODO add your handling code here:\
        int dialogResult = JOptionPane.showConfirmDialog(null, "Confirm Action",
                "Confirm save?", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION){
            if(checkFields("pnlCusInfo")){
                connect();
                try{
                    String sql1 = "Select from Customer where cusUsername='"
                            + txtCusInfoUsername.getText() + "'";
                    SQLStatement = con.prepareStatement(sql1);
                    queryResultSet = SQLStatement.executeQuery(sql1);
                    if(queryResultSet.next()){
                        say("Username has already been taken! Please try a"
                                + "different username");
                    }else{
                        try{
                            String sql2 = "Update Customer set" + "cusFname='"
                                    + txtCusInfoFname.getText() + "', "
                                    + "cusMname='"
                                    + txtCusInfoMname.getText() + "', "
                                    + "cusLname='"
                                    + txtCusInfoLname.getText()  + "', "
                                    + "cusUsername='"
                                    + txtCusInfoUsername.getText() + "', "
                                    + "cusPassword='"
                                    + txtCusInfoPassword.getText() + "', "
                                    + "cusSex='"
                                    + txtCusInfoSex.getText() + "'"
                                    + "where cusId='" + currCustomer.getID()
                                    + "'";
                            SQLStatement = con.prepareStatement(sql2);
                            SQLStatement.execute();
                            say("Customer information details have been"
                                    + " updated and saved!");
                            int currID = currCustomer.getID();
                            currCustomer = new Customer(
                                    currID,
                                    txtCusInfoFname.getText(),
                                    txtCusInfoMname.getText(),
                                    txtCusInfoLname.getText(),
                                    txtCusInfoUsername.getText(),
                                    txtCusInfoPassword.getText(),
                                    txtCusInfoSex.getText());
                            enableFields("pnlCusInfo", false);
                            btnCusInfoUpdate.setEnabled(true);
                            btnCusInfoSave.setEnabled(false);
                            btnCusInfoCancel.setEnabled(false);
                            btnCusInfoClear.setEnabled(false);
                            showValues("pnlCusInfo");
                        }catch(SQLException | HeadlessException e){
                            say("Error:\n" + e);
                        }
                    }
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
            }
        }
    }//GEN-LAST:event_btnCusInfoSaveActionPerformed

    private void btnCusInfoCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCusInfoCancelActionPerformed
        // TODO add your handling code here:
        int dialogResult = JOptionPane.showConfirmDialog(null, "Confirm Action",
                "Cancel update?", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION){
            enableFields("pnlCusInfo", false);
            btnCusInfoUpdate.setEnabled(true);
            btnCusInfoSave.setEnabled(false);
            btnCusInfoCancel.setEnabled(false);
            btnCusInfoClear.setEnabled(false);
            say("Update cancelled!");
            showValues("pnlCusInfo");
        }
    }//GEN-LAST:event_btnCusInfoCancelActionPerformed

    private void btnCusInfoClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCusInfoClearActionPerformed
        // TODO add your handling code here:
        int dialogResult = JOptionPane.showConfirmDialog(null, "Confirm Action",
                "Clear fields?", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION){
            clearFields("pnlCusInfo");
        }
    }//GEN-LAST:event_btnCusInfoClearActionPerformed
    
    private void connect(){
        try{
            String host = "jdbc:mysql://localhost:3306/resto_database";
            String userName =  "root";
            String userPass =  "";
            con = DriverManager.getConnection(host, userName, userPass);
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
    }
    
    private void say(String  say){
        JOptionPane.showMessageDialog(this, say);
    }
    
    private void switchPanel(String panel){
        mainPanel.removeAll();
        switch(panel){
            case "pnlStartup":
                mainPanel.add(pnlStartup);
                break;
            case "pnlInfo":
                mainPanel.add(pnlInfo);
                break;
            case "pnlLogin":
                mainPanel.add(pnlLogin);
                break;
            case "pnlCusMain":
                mainPanel.add(pnlCusMain);
                break;
            default:
                break;
        }
        mainPanel.repaint();
        mainPanel.revalidate();
    }
    
    private boolean checkFields(String panel){
        switch(panel){
            case "pnlLogin":
                return(!txtLoginUsername.getText().equals("")
                        && !txtLoginPassword.getText().equals(""));
            case "pnlCusInfo":
                return(!txtCusInfoFname.getText().equals("")
                        && txtCusInfoMname.getText().equals("")
                        && txtCusInfoLname.getText().equals("")
                        && txtCusInfoUsername.getText().equals("")
                        && txtCusInfoPassword.getText().equals("")
                        && txtCusInfoSex.getText().equals(""));
            default:
                break;
        }
        return false;
    }
    
    private void clearFields(String panel){
        switch(panel){
            case "pnlLogin":
                txtLoginUsername.setText(null);
                txtLoginPassword.setText(null);
            case "pnlCusInfo":
                txtCusInfoFname.setText(null);
                txtCusInfoMname.setText(null);
                txtCusInfoLname.setText(null);
                txtCusInfoUsername.setText(null);
                txtCusInfoPassword.setText(null);
                txtCusInfoSex.setText(null);
                break;
            default:
                break;
        }
    }
    
    private void showValues(String panel){
        connect();
        switch(panel){
            case "pnlCusInfo":
                txtCusInfoID.setText(Integer.toString(currCustomer.getID()));
                txtCusInfoFname.setText(currCustomer.getFname());
                txtCusInfoMname.setText(currCustomer.getMname());
                txtCusInfoLname.setText(currCustomer.getLname());
                txtCusInfoUsername.setText(currCustomer.getUsername());
                txtCusInfoPassword.setText(currCustomer.getPassword());
                txtCusInfoSex.setText(currCustomer.getSex());
                break;
            default:
                break;
        }
    }
    
    private void enableFields(String panel, boolean enable){
        switch(panel){
            case "pnlCusInfo":
                txtCusInfoID.setEnabled(enable);
                txtCusInfoFname.setEnabled(enable);
                txtCusInfoMname.setEnabled(enable);
                txtCusInfoLname.setEnabled(enable);
                txtCusInfoUsername.setEnabled(enable);
                txtCusInfoPassword.setEnabled(enable);
                txtCusInfoSex.setEnabled(enable);
                break;
            default:
                break;
        }
    }
    
    private void loginHistory(String type){
        Calendar cal = Calendar.getInstance();
        int month = cal.get(Calendar.MONTH);
        int day = cal.get(Calendar.DATE);
        String monthS;
        String dayS;
        if(month <= 9){
            monthS = "0" + Integer.toString(month);
        }else{
            monthS = Integer.toString(month);
        }
        if(day <=9){
            dayS = "0" + Integer.toString(day);
        }else{
            dayS = Integer.toString(day);
        }
        String date = cal.get(Calendar.YEAR) + "-"
                + monthS + "-"
                + dayS;
        connect();
        String inType;
        String inName;
        int inId;
        switch(type){
            case "admin":
                inType = "admin";
                inId = currAdmin.getID();
                inName = currAdmin.getFname();
                break;
            case "customer":
                inType =  "customer";
                inId = currCustomer.getID();
                inName = currCustomer.getFname();
                break;
            default:
                inType = "";
                inId = 0;
                inName = "";
                break;
        }
        try{
            String sql = "Insert into loginhistory (loginHistType, "
                + "loginHistAccountID, loginHistAccountName, "
                + "loginHistDate) values (?, ?, ?, ?)";
            SQLStatement = con.prepareStatement(sql);
            SQLStatement.setString(1, inType);
            SQLStatement.setString(2, Integer.toString(inId));
            SQLStatement.setString(3, inName);
            SQLStatement.setString(4, date);
            SQLStatement.execute();
            say("Login recorded!");
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
//        try{
//            String sql = ""
//        }catch(SQLException | HeadlessException e){
//            say("Error:\n" + e);
//        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(restoProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(restoProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(restoProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(restoProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new restoProgram().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdminAccountsEdit;
    private javax.swing.JButton btnCusInfoCancel;
    private javax.swing.JToggleButton btnCusInfoClear;
    private javax.swing.JToggleButton btnCusInfoSave;
    private javax.swing.JToggleButton btnCusInfoUpdate;
    private javax.swing.JButton btnLoginBack;
    private javax.swing.JButton btnLoginLogin;
    private javax.swing.JButton btnStartupBack;
    private javax.swing.JButton btnStartupExit;
    private javax.swing.JButton btnStartupInfo;
    private javax.swing.JButton btnStartupLaunch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblLoginPassword;
    private javax.swing.JLabel lblLoginUsername;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel pnlAdminMain;
    private javax.swing.JPanel pnlAdminMainHome;
    private javax.swing.JPanel pnlAdminMainInfo;
    private javax.swing.JTabbedPane pnlAdminMainTab;
    private javax.swing.JPanel pnlCusInfo;
    private javax.swing.JPanel pnlCusMain;
    private javax.swing.JPanel pnlCusMainHome;
    private javax.swing.JTabbedPane pnlCusMainTab;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPanel pnlStartup;
    private javax.swing.JTextField txtAdminInfoFname;
    private javax.swing.JTextField txtAdminInfoLname;
    private javax.swing.JTextField txtAdminInfoMname;
    private javax.swing.JTextField txtAdminInfoPassword;
    private javax.swing.JTextField txtAdminInfoUsername;
    private javax.swing.JTextField txtCusInfoFname;
    private javax.swing.JTextField txtCusInfoID;
    private javax.swing.JTextField txtCusInfoLname;
    private javax.swing.JTextField txtCusInfoMname;
    private javax.swing.JTextField txtCusInfoPassword;
    private javax.swing.JTextField txtCusInfoSex;
    private javax.swing.JTextField txtCusInfoUsername;
    private javax.swing.JPasswordField txtLoginPassword;
    private javax.swing.JTextField txtLoginUsername;
    // End of variables declaration//GEN-END:variables
}
