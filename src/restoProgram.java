
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Arvin Aquino
 */
public class restoProgram extends javax.swing.JFrame {

    PreparedStatement SQLStatement = null;
    ResultSet queryResultSet = null;
    Connection con = null;
    Admin currAdmin;
    Customer currCustomer, editCustomer;
    Tables selTable;
    /**
     * Creates new form restoProgram
     */
    public restoProgram() {
        this.currAdmin = new Admin();
        this.currCustomer = new Customer();
        this.editCustomer = new Customer();
        this.selTable = new Tables();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        pnlStartup = new javax.swing.JPanel();
        btnStartupLaunch = new javax.swing.JButton();
        btnStartupInfo = new javax.swing.JButton();
        btnStartupExit = new javax.swing.JButton();
        pnlCVM = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCVM = new javax.swing.JTable();
        btnCVMB = new javax.swing.JButton();
        btnCVMR = new javax.swing.JButton();
        pnlRT = new javax.swing.JPanel();
        btnRTBack = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblRT = new javax.swing.JTable();
        btnRTRefresh = new javax.swing.JButton();
        btnRTReserveTable = new javax.swing.JButton();
        pnlAdminAddMenu = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtAAMName = new javax.swing.JTextField();
        txtAAMCourse = new javax.swing.JTextField();
        txtAAMPrice = new javax.swing.JTextField();
        btnAAMAdd = new javax.swing.JButton();
        btnAAMClear = new javax.swing.JButton();
        btnAAMBack = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        txtAAMStock = new javax.swing.JTextField();
        pnlLogin = new javax.swing.JPanel();
        btnLoginBack = new javax.swing.JButton();
        btnLoginLogin = new javax.swing.JButton();
        txtLoginUsername = new javax.swing.JTextField();
        lblLoginUsername = new javax.swing.JLabel();
        lblLoginPassword = new javax.swing.JLabel();
        txtLoginPassword = new javax.swing.JPasswordField();
        pnlEditViewCustomer = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtEVCUsername = new javax.swing.JTextField();
        txtEVCPassword = new javax.swing.JTextField();
        txtEVCFname = new javax.swing.JTextField();
        txtEVCMname = new javax.swing.JTextField();
        txtEVCLname = new javax.swing.JTextField();
        btnEVCEdit = new javax.swing.JButton();
        btnEVCSave = new javax.swing.JButton();
        btnEVCCancel = new javax.swing.JButton();
        btnEVCBack = new javax.swing.JButton();
        pnlAdminMenu = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAMenu = new javax.swing.JTable();
        btnAMBack = new javax.swing.JButton();
        btnAMAdd = new javax.swing.JButton();
        btnAMEdit = new javax.swing.JButton();
        btnAMRefresh = new javax.swing.JButton();
        pnlAdminMain = new javax.swing.JPanel();
        pnlAdminMainTab = new javax.swing.JTabbedPane();
        pnlAdminMainHome = new javax.swing.JPanel();
        btnAdminHomeViewMenu = new javax.swing.JButton();
        pnlAdminMainInfo = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtAdminInfoMname = new javax.swing.JTextField();
        txtAdminInfoFname = new javax.swing.JTextField();
        txtAdminInfoLname = new javax.swing.JTextField();
        txtAdminInfoUsername = new javax.swing.JTextField();
        txtAdminInfoPassword = new javax.swing.JTextField();
        btnAdminInfoRefresh = new javax.swing.JButton();
        pnlAdminMainAccounts = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAdminAccountsCustomer = new javax.swing.JTable();
        btnAdminAccountsView = new javax.swing.JButton();
        btnAdminAccountsRefresh = new javax.swing.JButton();
        pnlInfo = new javax.swing.JPanel();
        btnStartupBack = new javax.swing.JButton();
        pnlCusMain = new javax.swing.JPanel();
        pnlCusMainTab = new javax.swing.JTabbedPane();
        pnlCusMainHome = new javax.swing.JPanel();
        btnCMViewMenu = new javax.swing.JButton();
        btnCMReserveTable = new javax.swing.JButton();
        pnlCusInfo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCusInfoID = new javax.swing.JTextField();
        txtCusInfoUsername = new javax.swing.JTextField();
        txtCusInfoPassword = new javax.swing.JTextField();
        txtCusInfoFname = new javax.swing.JTextField();
        txtCusInfoMname = new javax.swing.JTextField();
        txtCusInfoLname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCusInfoSex = new javax.swing.JTextField();
        btnCusInfoUpdate = new javax.swing.JToggleButton();
        btnCusInfoSave = new javax.swing.JToggleButton();
        btnCusInfoCancel = new javax.swing.JButton();
        btnCusInfoClear = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        mainPanel.setMaximumSize(new java.awt.Dimension(500, 382));
        mainPanel.setPreferredSize(new java.awt.Dimension(500, 382));
        mainPanel.setLayout(new java.awt.CardLayout());

        btnStartupLaunch.setText("Launch");
        btnStartupLaunch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartupLaunchActionPerformed(evt);
            }
        });

        btnStartupInfo.setText("Info");
        btnStartupInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartupInfoActionPerformed(evt);
            }
        });

        btnStartupExit.setText("Exit");
        btnStartupExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartupExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlStartupLayout = new javax.swing.GroupLayout(pnlStartup);
        pnlStartup.setLayout(pnlStartupLayout);
        pnlStartupLayout.setHorizontalGroup(
            pnlStartupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStartupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnStartupLaunch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStartupInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStartupExit)
                .addContainerGap(340, Short.MAX_VALUE))
        );
        pnlStartupLayout.setVerticalGroup(
            pnlStartupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStartupLayout.createSequentialGroup()
                .addContainerGap(348, Short.MAX_VALUE)
                .addGroup(pnlStartupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStartupLaunch)
                    .addComponent(btnStartupInfo)
                    .addComponent(btnStartupExit))
                .addContainerGap())
        );

        mainPanel.add(pnlStartup, "card2");

        pnlCVM.setPreferredSize(new java.awt.Dimension(500, 382));

        tblCVM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Course", "Price", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblCVM);

        btnCVMB.setText("Back");
        btnCVMB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCVMBActionPerformed(evt);
            }
        });

        btnCVMR.setText("Refresh");
        btnCVMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCVMRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCVMLayout = new javax.swing.GroupLayout(pnlCVM);
        pnlCVM.setLayout(pnlCVMLayout);
        pnlCVMLayout.setHorizontalGroup(
            pnlCVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCVMLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCVMLayout.createSequentialGroup()
                        .addComponent(btnCVMR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCVMB)))
                .addContainerGap())
        );
        pnlCVMLayout.setVerticalGroup(
            pnlCVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCVMLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCVMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCVMB)
                    .addComponent(btnCVMR))
                .addContainerGap())
        );

        mainPanel.add(pnlCVM, "card10");

        pnlRT.setMaximumSize(new java.awt.Dimension(500, 382));
        pnlRT.setMinimumSize(new java.awt.Dimension(500, 382));
        pnlRT.setPreferredSize(new java.awt.Dimension(500, 382));

        btnRTBack.setText("Back");
        btnRTBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRTBackActionPerformed(evt);
            }
        });

        tblRT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Table", "In Use", "Seats"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Boolean.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRTMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblRT);

        btnRTRefresh.setText("Refresh");
        btnRTRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRTRefreshActionPerformed(evt);
            }
        });

        btnRTReserveTable.setText("Reserve Table");
        btnRTReserveTable.setEnabled(false);
        btnRTReserveTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRTReserveTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRTLayout = new javax.swing.GroupLayout(pnlRT);
        pnlRT.setLayout(pnlRTLayout);
        pnlRTLayout.setHorizontalGroup(
            pnlRTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRTLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRTLayout.createSequentialGroup()
                        .addComponent(btnRTRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRTReserveTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRTBack))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlRTLayout.setVerticalGroup(
            pnlRTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRTLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRTBack)
                    .addComponent(btnRTRefresh)
                    .addComponent(btnRTReserveTable))
                .addContainerGap())
        );

        mainPanel.add(pnlRT, "card11");

        jLabel18.setText("Name:");

        jLabel19.setText("Course:");

        jLabel20.setText("Price:");

        btnAAMAdd.setText("Add");
        btnAAMAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAAMAddActionPerformed(evt);
            }
        });

        btnAAMClear.setText("Clear");
        btnAAMClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAAMClearActionPerformed(evt);
            }
        });

        btnAAMBack.setText("Back");
        btnAAMBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAAMBackActionPerformed(evt);
            }
        });

        jLabel21.setText("Stock:");

        javax.swing.GroupLayout pnlAdminAddMenuLayout = new javax.swing.GroupLayout(pnlAdminAddMenu);
        pnlAdminAddMenu.setLayout(pnlAdminAddMenuLayout);
        pnlAdminAddMenuLayout.setHorizontalGroup(
            pnlAdminAddMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminAddMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdminAddMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdminAddMenuLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                        .addComponent(txtAAMName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAdminAddMenuLayout.createSequentialGroup()
                        .addComponent(btnAAMAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAAMClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAAMBack))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAdminAddMenuLayout.createSequentialGroup()
                        .addGroup(pnlAdminAddMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlAdminAddMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAAMStock, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(txtAAMPrice)
                            .addComponent(txtAAMCourse))))
                .addContainerGap())
        );
        pnlAdminAddMenuLayout.setVerticalGroup(
            pnlAdminAddMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminAddMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdminAddMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtAAMName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminAddMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtAAMCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminAddMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(txtAAMPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminAddMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(txtAAMStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 239, Short.MAX_VALUE)
                .addGroup(pnlAdminAddMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAAMAdd)
                    .addComponent(btnAAMClear)
                    .addComponent(btnAAMBack))
                .addContainerGap())
        );

        mainPanel.add(pnlAdminAddMenu, "card9");

        btnLoginBack.setText("Back");
        btnLoginBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginBackActionPerformed(evt);
            }
        });

        btnLoginLogin.setText("Login");
        btnLoginLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginLoginActionPerformed(evt);
            }
        });

        lblLoginUsername.setText("Username:");

        lblLoginPassword.setText("Password:");

        javax.swing.GroupLayout pnlLoginLayout = new javax.swing.GroupLayout(pnlLogin);
        pnlLogin.setLayout(pnlLoginLayout);
        pnlLoginLayout.setHorizontalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLoginLayout.createSequentialGroup()
                        .addComponent(btnLoginLogin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 401, Short.MAX_VALUE)
                        .addComponent(btnLoginBack))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLoginLayout.createSequentialGroup()
                        .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLoginLayout.createSequentialGroup()
                                .addComponent(lblLoginUsername)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLoginUsername))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLoginLayout.createSequentialGroup()
                                .addComponent(lblLoginPassword)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLoginPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlLoginLayout.setVerticalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLoginUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLoginUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLoginPassword)
                    .addComponent(txtLoginPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 291, Short.MAX_VALUE)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoginBack)
                    .addComponent(btnLoginLogin))
                .addContainerGap())
        );

        mainPanel.add(pnlLogin, "card4");

        jLabel13.setText("Username:");

        jLabel14.setText("Password:");

        jLabel15.setText("First Name:");

        jLabel16.setText("Middle Name:");

        jLabel17.setText("Last Name:");

        txtEVCUsername.setEditable(false);

        txtEVCPassword.setEditable(false);

        txtEVCFname.setEditable(false);

        txtEVCMname.setEditable(false);

        txtEVCLname.setEditable(false);

        btnEVCEdit.setText("Edit");
        btnEVCEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEVCEditActionPerformed(evt);
            }
        });

        btnEVCSave.setText("Save");
        btnEVCSave.setEnabled(false);
        btnEVCSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEVCSaveActionPerformed(evt);
            }
        });

        btnEVCCancel.setText("Cancel");
        btnEVCCancel.setEnabled(false);
        btnEVCCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEVCCancelActionPerformed(evt);
            }
        });

        btnEVCBack.setText("Back");
        btnEVCBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEVCBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEditViewCustomerLayout = new javax.swing.GroupLayout(pnlEditViewCustomer);
        pnlEditViewCustomer.setLayout(pnlEditViewCustomerLayout);
        pnlEditViewCustomerLayout.setHorizontalGroup(
            pnlEditViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditViewCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditViewCustomerLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtEVCUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEditViewCustomerLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtEVCPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEditViewCustomerLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtEVCFname, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditViewCustomerLayout.createSequentialGroup()
                        .addGroup(pnlEditViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlEditViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEVCLname, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(txtEVCMname)))
                    .addGroup(pnlEditViewCustomerLayout.createSequentialGroup()
                        .addComponent(btnEVCEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEVCSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEVCCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 273, Short.MAX_VALUE)
                        .addComponent(btnEVCBack)))
                .addContainerGap())
        );
        pnlEditViewCustomerLayout.setVerticalGroup(
            pnlEditViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditViewCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtEVCUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEditViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(txtEVCPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEditViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(txtEVCFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEditViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(txtEVCMname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEditViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(txtEVCLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addGroup(pnlEditViewCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEVCEdit)
                    .addComponent(btnEVCSave)
                    .addComponent(btnEVCCancel)
                    .addComponent(btnEVCBack))
                .addContainerGap())
        );

        mainPanel.add(pnlEditViewCustomer, "card7");

        tblAMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Course", "Price", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAMenuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblAMenu);

        btnAMBack.setText("Back");
        btnAMBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAMBackActionPerformed(evt);
            }
        });

        btnAMAdd.setText("Add");
        btnAMAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAMAddActionPerformed(evt);
            }
        });

        btnAMEdit.setText("Edit");
        btnAMEdit.setEnabled(false);

        btnAMRefresh.setText("Refresh");
        btnAMRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAMRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAdminMenuLayout = new javax.swing.GroupLayout(pnlAdminMenu);
        pnlAdminMenu.setLayout(pnlAdminMenuLayout);
        pnlAdminMenuLayout.setHorizontalGroup(
            pnlAdminMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdminMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAdminMenuLayout.createSequentialGroup()
                        .addComponent(btnAMAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAMEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAMRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAMBack)))
                .addContainerGap())
        );
        pnlAdminMenuLayout.setVerticalGroup(
            pnlAdminMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAMBack)
                    .addComponent(btnAMAdd)
                    .addComponent(btnAMEdit)
                    .addComponent(btnAMRefresh))
                .addContainerGap())
        );

        mainPanel.add(pnlAdminMenu, "card8");

        pnlAdminMain.setLayout(new java.awt.BorderLayout());

        btnAdminHomeViewMenu.setText("View Menu");
        btnAdminHomeViewMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminHomeViewMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAdminMainHomeLayout = new javax.swing.GroupLayout(pnlAdminMainHome);
        pnlAdminMainHome.setLayout(pnlAdminMainHomeLayout);
        pnlAdminMainHomeLayout.setHorizontalGroup(
            pnlAdminMainHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminMainHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdminHomeViewMenu)
                .addContainerGap(435, Short.MAX_VALUE))
        );
        pnlAdminMainHomeLayout.setVerticalGroup(
            pnlAdminMainHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminMainHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdminHomeViewMenu)
                .addContainerGap(286, Short.MAX_VALUE))
        );

        pnlAdminMainTab.addTab("Home", pnlAdminMainHome);

        jLabel8.setText("First Name:");

        jLabel9.setText("Middle Name:");

        jLabel10.setText("Last Name:");

        jLabel11.setText("Username:");

        jLabel12.setText("Password:");

        btnAdminInfoRefresh.setText("Refresh");
        btnAdminInfoRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminInfoRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAdminMainInfoLayout = new javax.swing.GroupLayout(pnlAdminMainInfo);
        pnlAdminMainInfo.setLayout(pnlAdminMainInfoLayout);
        pnlAdminMainInfoLayout.setHorizontalGroup(
            pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminMainInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdminMainInfoLayout.createSequentialGroup()
                        .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 244, Short.MAX_VALUE)
                        .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAdminInfoFname, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtAdminInfoMname)
                            .addComponent(txtAdminInfoLname)
                            .addComponent(txtAdminInfoUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtAdminInfoPassword)))
                    .addGroup(pnlAdminMainInfoLayout.createSequentialGroup()
                        .addComponent(btnAdminInfoRefresh)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlAdminMainInfoLayout.setVerticalGroup(
            pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminMainInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtAdminInfoFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtAdminInfoMname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtAdminInfoLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtAdminInfoUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminMainInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtAdminInfoPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                .addComponent(btnAdminInfoRefresh)
                .addContainerGap())
        );

        pnlAdminMainTab.addTab("Info", pnlAdminMainInfo);

        tblAdminAccountsCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Customer ID", "Customer Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblAdminAccountsCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAdminAccountsCustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAdminAccountsCustomer);

        btnAdminAccountsView.setText("View");
        btnAdminAccountsView.setEnabled(false);
        btnAdminAccountsView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminAccountsViewActionPerformed(evt);
            }
        });

        btnAdminAccountsRefresh.setText("Refresh");
        btnAdminAccountsRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminAccountsRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAdminMainAccountsLayout = new javax.swing.GroupLayout(pnlAdminMainAccounts);
        pnlAdminMainAccounts.setLayout(pnlAdminMainAccountsLayout);
        pnlAdminMainAccountsLayout.setHorizontalGroup(
            pnlAdminMainAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminMainAccountsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdminMainAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
                    .addGroup(pnlAdminMainAccountsLayout.createSequentialGroup()
                        .addComponent(btnAdminAccountsView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdminAccountsRefresh)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlAdminMainAccountsLayout.setVerticalGroup(
            pnlAdminMainAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminMainAccountsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlAdminMainAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdminAccountsRefresh)
                    .addComponent(btnAdminAccountsView))
                .addContainerGap())
        );

        pnlAdminMainTab.addTab("Accounts", pnlAdminMainAccounts);

        pnlAdminMain.add(pnlAdminMainTab, java.awt.BorderLayout.CENTER);

        mainPanel.add(pnlAdminMain, "card6");

        btnStartupBack.setText("Back");
        btnStartupBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartupBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInfoLayout.createSequentialGroup()
                .addContainerGap(468, Short.MAX_VALUE)
                .addComponent(btnStartupBack)
                .addContainerGap())
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInfoLayout.createSequentialGroup()
                .addContainerGap(348, Short.MAX_VALUE)
                .addComponent(btnStartupBack)
                .addContainerGap())
        );

        mainPanel.add(pnlInfo, "card4");

        pnlCusMain.setLayout(new java.awt.BorderLayout());

        btnCMViewMenu.setText("View Menu");
        btnCMViewMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCMViewMenuActionPerformed(evt);
            }
        });

        btnCMReserveTable.setText("Reserve Table");
        btnCMReserveTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCMReserveTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCusMainHomeLayout = new javax.swing.GroupLayout(pnlCusMainHome);
        pnlCusMainHome.setLayout(pnlCusMainHomeLayout);
        pnlCusMainHomeLayout.setHorizontalGroup(
            pnlCusMainHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCusMainHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCusMainHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCMViewMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCMReserveTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(417, Short.MAX_VALUE))
        );
        pnlCusMainHomeLayout.setVerticalGroup(
            pnlCusMainHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCusMainHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCMViewMenu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCMReserveTable)
                .addContainerGap(291, Short.MAX_VALUE))
        );

        pnlCusMainTab.addTab("Home", pnlCusMainHome);

        jLabel1.setText("ID:");

        jLabel2.setText("Username:");

        jLabel3.setText("Password:");

        jLabel4.setText("First Name:");

        jLabel5.setText("Middle Name:");

        jLabel6.setText("Last Name:");

        txtCusInfoID.setEnabled(false);
        txtCusInfoID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCusInfoIDActionPerformed(evt);
            }
        });

        txtCusInfoUsername.setEnabled(false);

        txtCusInfoPassword.setEnabled(false);

        txtCusInfoFname.setEnabled(false);

        txtCusInfoMname.setEnabled(false);

        txtCusInfoLname.setEnabled(false);

        jLabel7.setText("Sex:");

        txtCusInfoSex.setEnabled(false);

        btnCusInfoUpdate.setText("Update");
        btnCusInfoUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCusInfoUpdateActionPerformed(evt);
            }
        });

        btnCusInfoSave.setText("Save");
        btnCusInfoSave.setEnabled(false);
        btnCusInfoSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCusInfoSaveActionPerformed(evt);
            }
        });

        btnCusInfoCancel.setText("Cancel");
        btnCusInfoCancel.setEnabled(false);
        btnCusInfoCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCusInfoCancelActionPerformed(evt);
            }
        });

        btnCusInfoClear.setText("Clear");
        btnCusInfoClear.setEnabled(false);
        btnCusInfoClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCusInfoClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCusInfoLayout = new javax.swing.GroupLayout(pnlCusInfo);
        pnlCusInfo.setLayout(pnlCusInfoLayout);
        pnlCusInfoLayout.setHorizontalGroup(
            pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCusInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCusInfoID, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCusInfoUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCusInfoPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 224, Short.MAX_VALUE)
                        .addComponent(txtCusInfoFname, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCusInfoLayout.createSequentialGroup()
                        .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCusInfoSex, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                            .addComponent(txtCusInfoLname)
                            .addComponent(txtCusInfoMname)))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(btnCusInfoUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCusInfoSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCusInfoCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCusInfoClear)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlCusInfoLayout.setVerticalGroup(
            pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCusInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCusInfoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCusInfoUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCusInfoPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCusInfoFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCusInfoMname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCusInfoLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCusInfoSex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCusInfoUpdate)
                    .addComponent(btnCusInfoSave)
                    .addComponent(btnCusInfoCancel)
                    .addComponent(btnCusInfoClear))
                .addContainerGap())
        );

        pnlCusMainTab.addTab("Info", pnlCusInfo);

        pnlCusMain.add(pnlCusMainTab, java.awt.BorderLayout.CENTER);

        mainPanel.add(pnlCusMain, "card5");

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartupBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartupBackActionPerformed
        // TODO add your handling code here:
        this.switchPanel("pnlStartup");
    }//GEN-LAST:event_btnStartupBackActionPerformed

    private void btnStartupInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartupInfoActionPerformed
        // TODO add your handling code here:
        this.switchPanel("pnlInfo");
    }//GEN-LAST:event_btnStartupInfoActionPerformed

    private void btnStartupExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartupExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnStartupExitActionPerformed

    private void btnStartupLaunchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartupLaunchActionPerformed
        // TODO add your handling code here:
        this.say("Launching app");
        this.switchPanel("pnlLogin");
    }//GEN-LAST:event_btnStartupLaunchActionPerformed

    private void btnLoginLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginLoginActionPerformed
        // TODO add your handling code here:
        this.connect();
        String username = txtLoginUsername.getText();
        String password = String.valueOf(txtLoginPassword.getPassword());
        if(checkFields("pnlLogin")){
            try{
                String sql = "Select * from admin where "
                + "adminUsername='" + username + "' and "
                + "adminPassword='" + password + "'";
                SQLStatement = con.prepareStatement(sql);
                queryResultSet = SQLStatement.executeQuery(sql);
                if(queryResultSet.next()){
                    String fName = queryResultSet.getString("adminFname");
                    String mName = queryResultSet.getString("adminMname");
                    String lName = queryResultSet.getString("adminLname");
                    int id = Integer.parseInt(queryResultSet.getString(
                            "adminID"));
                    currAdmin =  new Admin(id, fName, mName, lName, username,
                            password);
                    this.say("Welcom Admin " + fName + "!");
                    this.loginHistory("admin");
                    this.switchPanel("pnlAdminMain");
                }else{
                    String sqlA = "Select * from customer where "
                    + "cusUsername='" + username + "' and '"
                    + "cusPassword='" + password + "'";
                    SQLStatement = con.prepareStatement(sqlA);
                    queryResultSet = SQLStatement.executeQuery(sqlA);
                    if(queryResultSet.next()){
                        String fName = queryResultSet.getString("cusFname");
                        String mName = queryResultSet.getString("cusMname");
                        String lName = queryResultSet.getString("cusLname");
                        String sex = queryResultSet.getString("cusSex");
                        int id = Integer.parseInt(queryResultSet.getString(
                                "cusID"));
                        currCustomer =  new Customer(id, fName, mName, lName,
                                username, password, sex);
                        this.say("Welcom Customer " + fName + "!");
                        this.loginHistory("customer");
                        this.switchPanel("pnlCusMain");
                    }else{
                        this.say("Invalid username and/or password!\nPlease try"
                                + "again");
                        this.clearFields("pnlLogin");
                    }
                }
            }catch(SQLException | HeadlessException e){
                this.say("Error:\n" + e);
            }
        }else{
            this.say("Some fields are empty!");
            //            clearFields("studentLogin");
        }
    }//GEN-LAST:event_btnLoginLoginActionPerformed

    private void btnLoginBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginBackActionPerformed
        // TODO add your handling code here:
        this.clearFields("pnlLogin");
    }//GEN-LAST:event_btnLoginBackActionPerformed

    private void btnCusInfoUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCusInfoUpdateActionPerformed
        // TODO add your handling code here:
        this.enableFields("pnlCusInfo", true);
        btnCusInfoUpdate.setEnabled(false);
        btnCusInfoSave.setEnabled(true);
        btnCusInfoCancel.setEnabled(true);
        btnCusInfoClear.setEnabled(true);
    }//GEN-LAST:event_btnCusInfoUpdateActionPerformed

    private void btnCusInfoSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCusInfoSaveActionPerformed
        // TODO add your handling code here:\
        int dialogResult = JOptionPane.showConfirmDialog(null, "Confirm Action",
                "Confirm save?", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION){
            if(checkFields("pnlCusInfo")){
                connect();
                try{
                    String sql1 = "Select from Customer where cusUsername='"
                            + txtCusInfoUsername.getText() + "'";
                    SQLStatement = con.prepareStatement(sql1);
                    queryResultSet = SQLStatement.executeQuery(sql1);
                    if(queryResultSet.next()){
                        this.say("Username has already been taken! Please try a"
                                + "different username");
                    }else{
                        try{
                            String sql2 = "Update Customer set " + "cusFname='"
                                    + txtCusInfoFname.getText() + "', "
                                    + "cusMname='"
                                    + txtCusInfoMname.getText() + "', "
                                    + "cusLname='"
                                    + txtCusInfoLname.getText()  + "', "
                                    + "cusUsername='"
                                    + txtCusInfoUsername.getText() + "', "
                                    + "cusPassword='"
                                    + txtCusInfoPassword.getText() + "', "
                                    + "cusSex='"
                                    + txtCusInfoSex.getText() + "'"
                                    + "where cusId='" + currCustomer.getID()
                                    + "'";
                            SQLStatement = con.prepareStatement(sql2);
                            SQLStatement.execute();
                            this.say("Customer information details have been"
                                    + " updated and saved!");
                            int currID = currCustomer.getID();
                            currCustomer = new Customer(
                                    currID,
                                    txtCusInfoFname.getText(),
                                    txtCusInfoMname.getText(),
                                    txtCusInfoLname.getText(),
                                    txtCusInfoUsername.getText(),
                                    txtCusInfoPassword.getText(),
                                    txtCusInfoSex.getText());
                            this.enableFields("pnlCusInfo", false);
                            btnCusInfoUpdate.setEnabled(true);
                            btnCusInfoSave.setEnabled(false);
                            btnCusInfoCancel.setEnabled(false);
                            btnCusInfoClear.setEnabled(false);
                            this.showValues("pnlCusInfo");
                        }catch(SQLException | HeadlessException e){
                            this.say("Error:\n" + e);
                        }
                    }
                }catch(SQLException | HeadlessException e){
                    this.say("Error:\n" + e);
                }
            }
        }
    }//GEN-LAST:event_btnCusInfoSaveActionPerformed

    private void btnCusInfoCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCusInfoCancelActionPerformed
        // TODO add your handling code here:
        int dialogResult = JOptionPane.showConfirmDialog(null, "Confirm Action",
                "Cancel update?", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION){
            enableFields("pnlCusInfo", false);
            btnCusInfoUpdate.setEnabled(true);
            btnCusInfoSave.setEnabled(false);
            btnCusInfoCancel.setEnabled(false);
            btnCusInfoClear.setEnabled(false);
            this.say("Update cancelled!");
            this.showValues("pnlCusInfo");
        }
    }//GEN-LAST:event_btnCusInfoCancelActionPerformed

    private void btnCusInfoClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCusInfoClearActionPerformed
        // TODO add your handling code here:
        int dialogResult = JOptionPane.showConfirmDialog(null, "Confirm Action",
                "Clear fields?", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION){
            this.clearFields("pnlCusInfo");
        }
    }//GEN-LAST:event_btnCusInfoClearActionPerformed

    private void btnAdminAccountsRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminAccountsRefreshActionPerformed
        // TODO add your handling code here:
        this.viewTable("tblAdminAccountsCustomer");
        btnAdminAccountsView.setEnabled(false);
    }//GEN-LAST:event_btnAdminAccountsRefreshActionPerformed

    private void btnAdminAccountsViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminAccountsViewActionPerformed
        // TODO add your handling code here:
        int selRow = tblAdminAccountsCustomer.getSelectedRow();
        int selID = Integer.parseInt(tblAdminAccountsCustomer.getValueAt(selRow, 0).toString());
        this.connect();
        try{
            String sql = "Select * from customer where cusID='" + selID + "'";
            SQLStatement = con.prepareStatement(sql);
            queryResultSet = SQLStatement.executeQuery(sql);
            if(queryResultSet.next()){
                String eCUsername = queryResultSet.getString("cusUsername");
                String eCPassword = queryResultSet.getString("cusPassowrd");
                String eCFname = queryResultSet.getString("cusFname");
                String eCMname = queryResultSet.getString("cusMname");
                String eCLname = queryResultSet.getString("cusLname");
                String eCSex = queryResultSet.getString("cusSex");
                editCustomer = new Customer(
                        selID,
                        eCFname,
                        eCMname,
                        eCLname,
                        eCUsername,
                        eCPassword,
                        eCSex);
                btnAdminAccountsView.setEnabled(false);
                this.showValues("pnlEVC");
                switchPanel("pnlEVC");
            }else{
                say("Customer not found in database!");
            }
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
            btnAdminAccountsView.setEnabled(false);
        }
    }//GEN-LAST:event_btnAdminAccountsViewActionPerformed

    private void tblAdminAccountsCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAdminAccountsCustomerMouseClicked
        // TODO add your handling code here:
        btnAdminAccountsView.setEnabled(true);
    }//GEN-LAST:event_tblAdminAccountsCustomerMouseClicked

    private void btnAdminInfoRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminInfoRefreshActionPerformed
        // TODO add your handling code here:
        this.showValues("pnlAdminInfo");
    }//GEN-LAST:event_btnAdminInfoRefreshActionPerformed

    private void txtCusInfoIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCusInfoIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCusInfoIDActionPerformed

    private void btnEVCEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEVCEditActionPerformed
        // TODO add your handling code here:
        this.enableFields("pnlEVC", true);
        btnEVCSave.setEnabled(true);
        btnEVCCancel.setEnabled(true);
        btnEVCEdit.setEnabled(false);
    }//GEN-LAST:event_btnEVCEditActionPerformed

    private void btnEVCCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEVCCancelActionPerformed
        // TODO add your handling code here:
        this.enableFields("pnlEVC", false);
        btnEVCSave.setEnabled(false);
        btnEVCCancel.setEnabled(false);
        btnEVCEdit.setEnabled(true);
    }//GEN-LAST:event_btnEVCCancelActionPerformed

    private void btnEVCSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEVCSaveActionPerformed
        // TODO add your handling code here:
        if(checkFields("pnlEVC")){
            editCustomer.setPassword(txtEVCPassword.getText());
            editCustomer.setFname(txtEVCFname.getText());
            editCustomer.setMname(txtEVCMname.getText());
            editCustomer.setLname(txtEVCLname.getText());
            this.say("Customer info updated!");
            btnEVCSave.setEnabled(false);
            btnEVCCancel.setEnabled(false);
            btnEVCEdit.setEnabled(true);
            this.enableFields("pnlEVC", false);
        }
    }//GEN-LAST:event_btnEVCSaveActionPerformed

    private void btnEVCBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEVCBackActionPerformed
        // TODO add your handling code here:
        this.switchPanel("pnlAdminMain");
    }//GEN-LAST:event_btnEVCBackActionPerformed

    private void btnAMBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAMBackActionPerformed
        // TODO add your handling code here:
        this.switchPanel("pnlAdminMain");
    }//GEN-LAST:event_btnAMBackActionPerformed

    private void btnAMRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAMRefreshActionPerformed
        // TODO add your handling code here:
        this.viewTable("tblAMenu");
    }//GEN-LAST:event_btnAMRefreshActionPerformed

    private void tblAMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAMenuMouseClicked
        // TODO add your handling code here:
        btnAMEdit.setEnabled(true);
    }//GEN-LAST:event_tblAMenuMouseClicked

    private void btnAMAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAMAddActionPerformed
        // TODO add your handling code here:
        btnAMEdit.setEnabled(false);
        this.switchPanel("pnlAAM");
    }//GEN-LAST:event_btnAMAddActionPerformed

    private void btnAAMAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAAMAddActionPerformed
        // TODO add your handling code here:
        if(checkFields("pnlAAM")){
            String name = txtAAMName.getText();
            String course = txtAAMCourse.getText();
            int price = Integer.parseInt(txtAAMPrice.getText());
            int stock = Integer.parseInt(txtAAMStock.getText());
            try{
                String sql1 = "Select * from menu where menuName='" +
                        name + "'";
                SQLStatement = con.prepareStatement(sql1);
                queryResultSet = SQLStatement.executeQuery(sql1);
                if(!queryResultSet.next()){
                    try{
                        String sql2 = "Insert into menu "
                                + "(menuName, "
                                + "menuCourse, "
                                + "menuPrice, "
                                + "menuStock) values (?, ?, ?, ?)";
                        SQLStatement = con.prepareStatement(sql2);
                        SQLStatement.setString(1, name);
                        SQLStatement.setString(2, course);
                        SQLStatement.setInt(3, price);
                        SQLStatement.setInt(4, stock);
                        SQLStatement.execute();
                        this.say(name + " added to the menu!");
                        this.clearFields("pnlAAM");
                    }catch(SQLException | HeadlessException e){
                        this.say("Error:\n" + e);
                    }
                }
            }catch(SQLException | HeadlessException e){
                this.say("Error:\n" + e);
            }
        }else{
            this.say("Fill up all fields!");
        }
    }//GEN-LAST:event_btnAAMAddActionPerformed

    private void btnAAMClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAAMClearActionPerformed
        // TODO add your handling code here:
        this.clearFields("pnlAAM");
    }//GEN-LAST:event_btnAAMClearActionPerformed

    private void btnAAMBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAAMBackActionPerformed
        // TODO add your handling code here:
        this.clearFields("pnlAAM");
        this.switchPanel("pnlAM");
    }//GEN-LAST:event_btnAAMBackActionPerformed

    private void btnAdminHomeViewMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminHomeViewMenuActionPerformed
        // TODO add your handling code here:
        this.switchPanel("pnlAM");
    }//GEN-LAST:event_btnAdminHomeViewMenuActionPerformed

    private void btnCMViewMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCMViewMenuActionPerformed
        // TODO add your handling code h
        this.switchPanel("pnlCVM");
    }//GEN-LAST:event_btnCMViewMenuActionPerformed

    private void btnCVMBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCVMBActionPerformed
        // TODO add your handling code here:
        this.switchPanel("pnlCusMain");
    }//GEN-LAST:event_btnCVMBActionPerformed

    private void btnCVMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCVMRActionPerformed
        // TODO add your handling code here:
        this.viewTable("tblCVM");
    }//GEN-LAST:event_btnCVMRActionPerformed

    private void btnCMReserveTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCMReserveTableActionPerformed
        // TODO add your handling code here:
        this.switchPanel("pnlRT");
    }//GEN-LAST:event_btnCMReserveTableActionPerformed

    private void btnRTRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRTRefreshActionPerformed
        // TODO add your handling code here:
        this.viewTable("tblRT");
    }//GEN-LAST:event_btnRTRefreshActionPerformed

    private void btnRTBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRTBackActionPerformed
        // TODO add your handling code here:
        this.switchPanel("pnlCusMain");
    }//GEN-LAST:event_btnRTBackActionPerformed

    private void tblRTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRTMouseClicked
        // TODO add your handling code here:
        btnRTReserveTable.setEnabled(true);
        btnRTReserveTable.setEnabled(false);
    }//GEN-LAST:event_tblRTMouseClicked

    private void btnRTReserveTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRTReserveTableActionPerformed
        // TODO add your handling code here:
        int selRow = tblRT.getSelectedRow();
        int selID = Integer.parseInt(tblRT.getValueAt(selRow, 0).toString());
        boolean SelBool = (Boolean) tblRT.getValueAt(selRow, 1);
        if(SelBool){
            this.say("Selected table is in use!\n"
                    + "Please try another one");
        }else{
            connect();
            try{
                String sql = "Select * from tables where tblID='"
                        + selID + "'";
                SQLStatement = con.prepareStatement(sql);
                queryResultSet = SQLStatement.executeQuery(sql);
                if(queryResultSet.next()){
                    int seats = queryResultSet.getInt("tblSeats");
                    selTable = new Tables(selID, false, seats);
                    //go to next shit
                }
            }catch(SQLException | HeadlessException e){
                this.say("Error:\n" + e);
            }
        }
    }//GEN-LAST:event_btnRTReserveTableActionPerformed
    
    private void connect(){
        try{
            String host = "jdbc:mysql://localhost:3306/resto_database";
            String userName =  "root";
            String userPass =  "";
            con = DriverManager.getConnection(host, userName, userPass);
        }catch(SQLException | HeadlessException e){
            this.say("Error:\n" + e);
        }
    }
    
    private void say(String  say){
        JOptionPane.showMessageDialog(this, say);
    }
    
    private void switchPanel(String panel){
        mainPanel.removeAll();
        switch(panel){
            case "pnlStartup":
                mainPanel.add(pnlStartup);
                break;
            case "pnlInfo":
                mainPanel.add(pnlInfo);
                break;
            case "pnlLogin":
                mainPanel.add(pnlLogin);
                break;
            case "pnlCusMain":
                mainPanel.add(pnlCusMain);
                break;
            case "pnlAdminMain":
                mainPanel.add(pnlAdminMain);
                break;
            case "pnlEVC":
                mainPanel.add(pnlEditViewCustomer);
                break;
            case "pnlAM":
                mainPanel.add(pnlAdminMenu);
                break;
            case "pnlAAM":
                mainPanel.add(pnlAdminAddMenu);
                break;
            case "pnlCVM":
                mainPanel.add(pnlCVM);
                break;
            case "pnlRT":
                mainPanel.add(pnlRT);
                break;
            default:
                break;
        }
        mainPanel.repaint();
        mainPanel.revalidate();
    }
    
    private boolean checkFields(String panel){
        switch(panel){
            case "pnlLogin":
                return(!txtLoginUsername.getText().equals("")
                        && !String.valueOf(txtLoginPassword.getPassword()).equals(""));
            case "pnlCusInfo":
                return(!txtCusInfoFname.getText().equals("")
                        && !txtCusInfoMname.getText().equals("")
                        && !txtCusInfoLname.getText().equals("")
                        && !txtCusInfoUsername.getText().equals("")
                        && !txtCusInfoPassword.getText().equals("")
                        && !txtCusInfoSex.getText().equals(""));
            case "pnlEVC":
                return(!txtEVCUsername.getText().equals("")
                        && !txtEVCPassword.getText().equals("")
                        && !txtEVCFname.getText().equals("")
                        && !txtEVCMname.getText().equals("")
                        && !txtEVCLname.getText().equals(""));
            case "pnlAAM":
                return(!txtAAMName.getText().equals("")
                        && !txtAAMCourse.getText().equals("")
                        && !txtAAMPrice.getText().equals("")
                        && !txtAAMStock.getText().equals(""));
            default:
                break;
        }
        return false;
    }
    
    private void clearFields(String panel){
        switch(panel){
            case "pnlLogin":
                txtLoginUsername.setText(null);
                txtLoginPassword.setText(null);
            case "pnlCusInfo":
                txtCusInfoFname.setText(null);
                txtCusInfoMname.setText(null);
                txtCusInfoLname.setText(null);
                txtCusInfoUsername.setText(null);
                txtCusInfoPassword.setText(null);
                txtCusInfoSex.setText(null);
                break;
            case "pnlAAM":
                txtAAMName.setText(null);
                txtAAMCourse.setText(null);
                txtAAMPrice.setText(null);
                txtAAMStock.setText(null);
                break;
            default:
                break;
        }
    }
    
    private void showValues(String panel){
        this.connect();
        switch(panel){
            case "pnlCusInfo":
                txtCusInfoID.setText(Integer.toString(currCustomer.getID()));
                txtCusInfoFname.setText(currCustomer.getFname());
                txtCusInfoMname.setText(currCustomer.getMname());
                txtCusInfoLname.setText(currCustomer.getLname());
                txtCusInfoUsername.setText(currCustomer.getUsername());
                txtCusInfoPassword.setText(currCustomer.getPassword());
                txtCusInfoSex.setText(currCustomer.getSex());
                break;
            case "pnlAdminInfo":
                txtAdminInfoFname.setText(currAdmin.getFname());
                txtAdminInfoMname.setText(currAdmin.getMname());
                txtAdminInfoLname.setText(currAdmin.getLname());
//                txtAdminInfoUsername.setText(currAdmin.getUsername());
                txtAdminInfoPassword.setText(currAdmin.getPassword());
                break;
            case "pnlEVC":
                txtEVCUsername.setText(editCustomer.getUsername());
                txtEVCPassword.setText(editCustomer.getPassword());
                txtEVCFname.setText(editCustomer.getFname());
                txtEVCMname.setText(editCustomer.getMname());
                txtEVCLname.setText(editCustomer.getLname());
                break;
            default:
                break;
        }
    }
    
    private void enableFields(String panel, boolean enable){
        switch(panel){
            case "pnlCusInfo":
                txtCusInfoID.setEnabled(enable);
                txtCusInfoFname.setEnabled(enable);
                txtCusInfoMname.setEnabled(enable);
                txtCusInfoLname.setEnabled(enable);
                txtCusInfoUsername.setEnabled(enable);
                txtCusInfoPassword.setEnabled(enable);
                txtCusInfoSex.setEnabled(enable);
                break;
            case "pnlEVC":
//                txtEVCUsername.setEditable(enable);
                txtEVCPassword.setEditable(enable);
                txtEVCFname.setEditable(enable);
                txtEVCMname.setEditable(enable);
                txtEVCLname.setEditable(enable);
                break;
            default:
                break;
        }
    }
    
    private void loginHistory(String type){
        Calendar cal = Calendar.getInstance();
        int month = cal.get(Calendar.MONTH);
        int day = cal.get(Calendar.DATE);
        String monthS;
        String dayS;
        if(month <= 9){
            monthS = "0" + Integer.toString(month);
        }else{
            monthS = Integer.toString(month);
        }
        if(day <=9){
            dayS = "0" + Integer.toString(day);
        }else{
            dayS = Integer.toString(day);
        }
        String date = cal.get(Calendar.YEAR) + "-"
                + monthS + "-"
                + dayS;
        this.connect();
        String inType;
        String inName;
        int inId;
        switch(type){
            case "admin":
                inType = "admin";
                inId = currAdmin.getID();
                inName = currAdmin.getFname();
                break;
            case "customer":
                inType =  "customer";
                inId = currCustomer.getID();
                inName = currCustomer.getFname();
                break;
            default:
                inType = "N/A";
                inId = 0;
                inName = "N/A";
                break;
        }
        try{
            String sql = "Insert into loginhistory (loginHistType, "
                + "loginHistAccountID, loginHistAccountName, "
                + "loginHistDate) values (?, ?, ?, ?)";
            SQLStatement = con.prepareStatement(sql);
            SQLStatement.setString(1, inType);
            SQLStatement.setString(2, Integer.toString(inId));
            SQLStatement.setString(3, inName);
            SQLStatement.setString(4, date);
            SQLStatement.execute();
            this.say("Login recorded!");
        }catch(SQLException | HeadlessException e){
            this.say("Error:\n" + e);
        }
        
    }
    
    private void viewTable(String table){
        this.connect();
        switch(table){
            case "tblAdminAccountsCustomer":
                try{
                    String sql = "Select cusID, cusFname "
                            + "from customer";
                    SQLStatement = con.prepareStatement(sql);
                    queryResultSet = SQLStatement.executeQuery(sql);
                    tblAdminAccountsCustomer.setModel(DbUtils.resultSetToTableModel(queryResultSet));
                }catch(SQLException | HeadlessException e){
                    this.say("Error:\n" + e);
                }
                break;
            case "tblAMenu":
                try{
                    String sql = "Select * from menu";
                    SQLStatement = con.prepareStatement(sql);
                    queryResultSet = SQLStatement.executeQuery(sql);
                    tblAMenu.setModel(DbUtils.resultSetToTableModel(queryResultSet));
                }catch(SQLException | HeadlessException e){
                    this.say("Error:\n" + e);
                }
                break;
            case "tblCVM":
                try{
                    String sql = "Select * from menu";
                    SQLStatement = con.prepareStatement(sql);
                    queryResultSet = SQLStatement.executeQuery(sql);
                    tblCVM.setModel(DbUtils.resultSetToTableModel(queryResultSet));
                }
                catch(SQLException | HeadlessException e){
                    this.say("Error:\n" + e);
                }
                break;
            case "tblRT":
                try{
                    String sql = "Select * from tables";
                    SQLStatement = con.prepareStatement(sql);
                    queryResultSet = SQLStatement.executeQuery(sql);
                    tblRT.setModel(DbUtils.resultSetToTableModel(queryResultSet));
                }
                catch(SQLException | HeadlessException e){
                    this.say("Error:\n" + e);
                }
                break;    
            default:
                break;
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(restoProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(restoProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(restoProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(restoProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new restoProgram().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAAMAdd;
    private javax.swing.JButton btnAAMBack;
    private javax.swing.JButton btnAAMClear;
    private javax.swing.JButton btnAMAdd;
    private javax.swing.JButton btnAMBack;
    private javax.swing.JButton btnAMEdit;
    private javax.swing.JButton btnAMRefresh;
    private javax.swing.JButton btnAdminAccountsRefresh;
    private javax.swing.JButton btnAdminAccountsView;
    private javax.swing.JButton btnAdminHomeViewMenu;
    private javax.swing.JButton btnAdminInfoRefresh;
    private javax.swing.JButton btnCMReserveTable;
    private javax.swing.JButton btnCMViewMenu;
    private javax.swing.JButton btnCVMB;
    private javax.swing.JButton btnCVMR;
    private javax.swing.JButton btnCusInfoCancel;
    private javax.swing.JToggleButton btnCusInfoClear;
    private javax.swing.JToggleButton btnCusInfoSave;
    private javax.swing.JToggleButton btnCusInfoUpdate;
    private javax.swing.JButton btnEVCBack;
    private javax.swing.JButton btnEVCCancel;
    private javax.swing.JButton btnEVCEdit;
    private javax.swing.JButton btnEVCSave;
    private javax.swing.JButton btnLoginBack;
    private javax.swing.JButton btnLoginLogin;
    private javax.swing.JButton btnRTBack;
    private javax.swing.JButton btnRTRefresh;
    private javax.swing.JButton btnRTReserveTable;
    private javax.swing.JButton btnStartupBack;
    private javax.swing.JButton btnStartupExit;
    private javax.swing.JButton btnStartupInfo;
    private javax.swing.JButton btnStartupLaunch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblLoginPassword;
    private javax.swing.JLabel lblLoginUsername;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel pnlAdminAddMenu;
    private javax.swing.JPanel pnlAdminMain;
    private javax.swing.JPanel pnlAdminMainAccounts;
    private javax.swing.JPanel pnlAdminMainHome;
    private javax.swing.JPanel pnlAdminMainInfo;
    private javax.swing.JTabbedPane pnlAdminMainTab;
    private javax.swing.JPanel pnlAdminMenu;
    private javax.swing.JPanel pnlCVM;
    private javax.swing.JPanel pnlCusInfo;
    private javax.swing.JPanel pnlCusMain;
    private javax.swing.JPanel pnlCusMainHome;
    private javax.swing.JTabbedPane pnlCusMainTab;
    private javax.swing.JPanel pnlEditViewCustomer;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPanel pnlRT;
    private javax.swing.JPanel pnlStartup;
    private javax.swing.JTable tblAMenu;
    private javax.swing.JTable tblAdminAccountsCustomer;
    private javax.swing.JTable tblCVM;
    private javax.swing.JTable tblRT;
    private javax.swing.JTextField txtAAMCourse;
    private javax.swing.JTextField txtAAMName;
    private javax.swing.JTextField txtAAMPrice;
    private javax.swing.JTextField txtAAMStock;
    private javax.swing.JTextField txtAdminInfoFname;
    private javax.swing.JTextField txtAdminInfoLname;
    private javax.swing.JTextField txtAdminInfoMname;
    private javax.swing.JTextField txtAdminInfoPassword;
    private javax.swing.JTextField txtAdminInfoUsername;
    private javax.swing.JTextField txtCusInfoFname;
    private javax.swing.JTextField txtCusInfoID;
    private javax.swing.JTextField txtCusInfoLname;
    private javax.swing.JTextField txtCusInfoMname;
    private javax.swing.JTextField txtCusInfoPassword;
    private javax.swing.JTextField txtCusInfoSex;
    private javax.swing.JTextField txtCusInfoUsername;
    private javax.swing.JTextField txtEVCFname;
    private javax.swing.JTextField txtEVCLname;
    private javax.swing.JTextField txtEVCMname;
    private javax.swing.JTextField txtEVCPassword;
    private javax.swing.JTextField txtEVCUsername;
    private javax.swing.JPasswordField txtLoginPassword;
    private javax.swing.JTextField txtLoginUsername;
    // End of variables declaration//GEN-END:variables
}
